//
// Created by wangzhaosheng on 19-10-10.
//
//todo c++中的引用 (1声明就赋值   2 不可更改指向)  引用的本质是常指针   常量的特性是必须声明就赋值    所以就是常指针  类似 int * const a   注意const不是放到最前面


//c++ 参数传递方式有三种,分别为:传对象,传引用和传指针,那这三种传递方式之间到底有什么区别呢?
//
//传对象:是将实参对象的值传递给形参对象,是单项传递,在函数中修改形参的值时,不会影响到原来实参的值
//
//        传引用:把实参对象名传给形参对象名,形参对象名就成为实参对象名的别名,实参和形参代表同一个对象,所以改变形参,就是改变实参对象的值.
//
//传指针:将指向对象的指针作为函数的参数,形参是对象的指针,实参是对象的地址值, 通过改变形参的值来改变实参的地址指向,形参传递的就是实参本身,所以当在函数中改变形参的值时,改变的就是原来实参的值.
#include <iostream>

void change(int & p);

int main1013(){
    int a=3;
    int b =5;
    int & p =a;
    change(a);

    std::cout<< a<<std::endl;
    std::cout<< p<<std::endl;

}
//todo 这里传递是传递的引用    c中的传递都是值传递
void change(int & p){

    p=4;

}


